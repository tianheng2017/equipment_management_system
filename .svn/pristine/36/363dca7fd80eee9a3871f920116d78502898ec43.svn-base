<?php

// +----------------------------------------------------------------------
// | EasyAdmin
// +----------------------------------------------------------------------
// | PHP交流群: 763822524
// +----------------------------------------------------------------------
// | 开源协议  https://mit-license.org 
// +----------------------------------------------------------------------
// | github开源项目：https://github.com/zhongshaofa/EasyAdmin
// +----------------------------------------------------------------------

namespace app\admin\controller;


use app\admin\model\SystemAdmin;
use app\common\controller\AdminController;
use think\captcha\facade\Captcha;
use think\facade\Cache;
use think\facade\Env;

/**
 * Class Login
 * @package app\admin\controller
 */
class Login extends AdminController
{

    /**
     * 初始化方法
     */
    public function initialize()
    {
        parent::initialize();
        $action = $this->request->action();
        if (!empty(session('admin')) && !in_array($action, ['out'])) {
            $adminModuleName = config('app.admin_alias_name');
            $this->redirect(__url("@{$adminModuleName}"));
        }
        $this->assign('is_mobile', $this->request->isMobile() ? 1 : 0);
    }

    /**
     * 用户登录
     * @return string
     * @throws \Exception
     */
    public function index()
    {
        $captcha = Env::get('manage.captcha', 1);
        if ($this->request->isPost()) {
            $post = $this->request->post();
            $rule = [
                'username|邮箱'           => 'require|email',
                'password|密码'           => 'require',
                'keep_login|是否保持登录'  => 'require',
            ];
            $captcha == 1 && $rule['captcha|验证码'] = 'require|captcha';
            $this->validate($post, $rule);
            $admin = SystemAdmin::where(['username' => $post['username']])->find();
            if (empty($admin)) {
                $this->error('用户不存在');
            }
            if (password($post['password']) != $admin->password) {
                $this->error('密码输入有误');
            }
            if ($admin->status == 0) {
                $this->error('账号已被禁用');
            }
            $admin = $admin->toArray();
            unset($admin['password']);
            $admin['expire_time'] = $post['keep_login'] == 1 ? true : time() + 7200;
            session('admin', $admin);
            $this->success('登录成功');
        }
        $this->assign('captcha', $captcha);
        $this->assign('demo', $this->isDemo);
        return $this->fetch();
    }

    /**
     * 用户退出
     * @return mixed
     */
    public function out()
    {
        session('admin', null);
        $this->success('退出登录成功');
    }

    /**
     * 验证码
     * @return \think\Response
     */
    public function captcha()
    {
        return Captcha::create();
    }

    /**
     * 用户注册
     */
    public function register()
    {
        if ($this->request->isPost()) {
            $post = $this->request->post();
            $rule = [
                'username|邮箱'           => 'require|email',
                'code|邮箱验证码'         => 'require|email|length:6',
                'password|密码'           => 'require|min:6',
                'repassword|二次密码'     => 'require|confirm:password',
            ];
            $this->validate($post, $rule);
            if (Cache::get($post['username']) <> $post['code']){
                $this->error('验证码不存在或已失效');
            }
            //默认注册的为用户权限 authids=8
            $admin = SystemAdmin::create([
                'username'  =>  $post['username'],
                'password'  =>  password($post['password']),
                'authids'   =>  8,
            ]);
            session('admin', $admin);
            $this->success('注册成功');
        }
        return $this->fetch();
    }

    /**
     * 找回密码
     */
    public function findPassword()
    {
        if ($this->request->isPost()) {
            $post = $this->request->post();
            $rule = [
                'username|邮箱' => 'require|email',
            ];
            $this->validate($post, $rule);
            $user = SystemAdmin::where('username', $post['username'])->find();
            if (empty($user)) {
                $this->error('账号不存在');
            }
//            if (time() - $user->reset_time < 5 * 60){
//                $this->error('距离上次发送邮件的时间不足5分钟，请稍后再试');
//            }

            $token = md5($user->id.$user->username.$user->password);
            $url = $this->request->domain().'/admin/login/reset/username/'.$user->username.'/token/'.$token;
            $time = time();

            $title = "【找回密码】密码找回请求";
            $content = "尊敬的 ".$user->username."，";
            $content .= "您在 ".date('Y-m-d H:i:s', $time)." 提交了密码找回请求，请在1小时内点击下面的链接重置密码：<br><br>";
            $content .= $url;

            $res = sendEmail($title, $content, $user->username, $user->username);
            if($res == 1){
                $user->reset_time = $time;
                $user->save();
                $this->success('系统已向您的邮箱发送了一封邮件，请及时登录到您的邮箱重置密码！');
            }else{
                $this->error('发送失败');
            }
        }
        return $this->fetch();
    }

    /**
     * 重置密码
     */
    public function reset()
    {
        if ($this->request->isPost()) {
            $post = $this->request->post();
            $rule = [
                'password|密码'           => 'require|min:6',
                'repassword|二次密码'     => 'require|confirm:password',
            ];
            $this->validate($post, $rule);
            $user = SystemAdmin::where('username', $post['username'])->find();
            if ($post['token'] <> md5($user->id.$user->username.$user->password)){
                $this->error('链接无效');
            }
            if (time() - 60 * 3600 > $user->reset_time){
                $this->error('该链接已过期，请重新操作！');
            }
            $res = SystemAdmin::where('username', $user->username)->update([
                'password'  =>  password($post['password'])
            ]);
            if (!empty($res)){
                $this->success('密码重置成功');
            }
            $this->success('密码重置失败');
        }
        $post = $this->request->get();
        halt($post);
//        if (empty($post['username']) || empty($post['token'])){
//            $this->redirect(__url('login/index'));
//        }
        $user = SystemAdmin::where('username', $post['username'])->find();
        if ($post['token'] <> md5($user->id.$user->username.$user->password)){
            $this->error('链接无效');
        }
        if (time() - 60 * 3600 > $user->reset_time){
            $this->error('该链接已过期，请重新操作！');
        }
        $this->assign('data', $post);
        $this->fetch();
    }

    /**
     * 发送邮箱验证码
     */
    public function sendCode()
    {
        $username = $this->request->post('username');
        $code = getCode();
        Cache::set($username, $code, 1800);

        $title = "【验证码】账号注册";
        $content = "您的验证码为：".$code.' ，有效期30分钟';

        $res = sendEmail($title, $content, $username, $username);
        if($res == 1){
            $this->success('发送成功');
        }else{
            $this->error('发送失败');
        }
    }
}