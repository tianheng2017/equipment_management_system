<?php

namespace app\admin\controller;

use app\common\controller\AdminController;
use EasyAdmin\annotation\ControllerAnnotation;
use EasyAdmin\annotation\NodeAnotation;
use think\App;

/**
 * @ControllerAnnotation(title="device")
 */
class Device extends AdminController
{

    use \app\admin\traits\Curd;

    protected $allowModifyFileds = ['device_id', 'name', 'area_id', 'x_coordinates','y_coordinates'];

    public function __construct(App $app)
    {
        parent::__construct($app);

        $this->model = new \app\admin\model\Device();
        
        $this->assign('getSystemProvinceList', $this->model->getSystemProvinceList());

    }

    
    /**
     * @NodeAnotation(title="列表")
     */
    public function index()
    {
        if ($this->request->isAjax()) {
            if (input('selectFieds')) {
                return $this->selectList();
            }

            //用户权限下，只能查看自己的设备
            $auth_ids = explode(',', $this->user['auth_ids']);
            if (in_array(1, $auth_ids) || in_array(2, $auth_ids)){
                $map[] = ['uid', '>', 0];
            }else{
                $map[] = ['uid', '=', $this->user['id']];
            }

            list($page, $limit, $where) = $this->buildTableParames();
            $count = $this->model
                ->with(['systemProvince', 'systemAdmin'])
                ->where($where)
                ->where($map)
                ->count();
            $list = $this->model
                ->with(['systemProvince', 'systemAdmin'])
                ->where($where)
                ->where($map)
                ->page($page, $limit)
                ->order($this->sort)
                ->select();
            $data = [
                'code'  => 0,
                'msg'   => '',
                'count' => $count,
                'data'  => $list,
            ];
            return json($data);
        }
        return $this->fetch();
    }

    /**
     * @NodeAnotation(title="添加")
     */
    public function add()
    {
        if ($this->request->isAjax()) {
            $post = $this->request->post();
            $post['uid'] = $this->user['id'];
            $rule = [];
            $this->validate($post, $rule);
            try {
                $save = $this->model->save($post);
            } catch (\Exception $e) {
                $this->error('保存失败:'.$e->getMessage());
            }
            $save ? $this->success('保存成功') : $this->error('保存失败');
        }
        return $this->fetch();
    }

    /**
     * @NodeAnotation(title="编辑")
     */
    public function edit($id)
    {
        //用户权限下，只能修改自己的设备
        $auth_ids = explode(',', $this->user['auth_ids']);
        if (in_array(1, $auth_ids) || in_array(2, $auth_ids)){
            $map[] = ['uid', '>', 0];
        }else{
            $map[] = ['uid', '=', $this->user['id']];
        }

        $row = $this->model->where($map)->find($id);
        empty($row) && $this->error('数据不存在');

        if ($this->request->isAjax()) {
            $post = $this->request->post();
            $rule = [];
            $this->validate($post, $rule);
            try {
                $save = $row->save($post);
            } catch (\Exception $e) {
                $this->error('保存失败');
            }
            $save ? $this->success('保存成功') : $this->error('保存失败');
        }
        $this->assign('row', $row);
        return $this->fetch();
    }

}