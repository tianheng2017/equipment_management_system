<link rel="stylesheet" href="/static/plugs/layui-v2.5.6/css/layui.css">
<div class="layuimini-container">
    <div class="layuimini-main">
        <div style="width: 5%;height: 800px;resize: both;display: inline-block;top: 5px;position: relative;">
            <div id="test13" class="demo-tree-more"></div>
        </div>
        <div id="container" style="width:90%; height:800px;resize:both;display: inline-block"></div>
    </div>
</div>
<script>
    layui.use(['tree', 'util'], function(){
        var tree = layui.tree
            ,layer = layui.layer
            ,util = layui.util
            ,data1 = [{
                title: '江西'
                ,id: 1
                ,children: [{
                    title: '南昌'
                    ,id: 1000
                    ,children: [{
                        title: '青山湖区'
                        ,id: 10001
                    },{
                        title: '高新区'
                        ,id: 10002
                    }]
                },{
                    title: '九江'
                    ,id: 1001
                },{
                    title: '赣州'
                    ,id: 1002
                }]
            },{
                title: '广西'
                ,id: 2
                ,children: [{
                    title: '南宁'
                    ,id: 2000
                },{
                    title: '桂林'
                    ,id: 2001
                }]
            },{
                title: '陕西'
                ,id: 3
                ,children: [{
                    title: '西安'
                    ,id: 3000
                },{
                    title: '延安'
                    ,id: 3001
                }]
            }];
        //无连接线风格
        tree.render({
            elem: '#test13'
            ,data: data1
            ,showLine: false  //是否开启连接线
        });
    });
</script>
<script type="text/javascript" src="/static/plugs/jquery-3.4.1/jquery-3.4.1.min.js"></script>
<script type="text/javascript" src="/static/plugs/layui-v2.5.6/layui.all.js"></script>
<script type="text/javascript" src="/static/plugs/amap/adcodes.js"></script>
<script type="text/javascript" src="https://webapi.amap.com/maps?v=1.4.15&key=8278ec87f2f992b65ff6553afad8aea7&plugin=AMap.ControlBar,AMap.DistrictLayer,AMap.Scale,AMap.ToolBar,AMap.MarkerClusterer"></script>
<script src="//webapi.amap.com/ui/1.1/main.js"></script>
<script>
    var map = new AMap.Map('container', {
        resizeEnable: true,
        rotateEnable:true,
        pitchEnable:true,
        features:['bg','road', 'building', 'point'],
        pitch:0,
        rotation:0,
        viewMode:'3D',
        buildingAnimation:true,
        expandZoomRange:true,
        center: [105, 34],
        zoom: 5
    });
    map.addControl(new AMap.ControlBar({
        showZoomBar:false,
        showControlButton:true,
        position:{
            right:'10px',
            top:'10px'
        }
    }));
</script>
<script type="text/javascript" src="/static/plugs/amap/DistrictExplorer.js"></script>
<script>
    $(function () {
        var overlayGroups, cluster;
        function get_marker_table(id){
            var data;
            $.ajax({
                url: '{:url("device.area/pop")}',
                type:"GET",
                async: false,
                dataType:"html",
                data: {id: id},
                success:function(result){
                    data = result;
                }
            });
            return data;
        }
        $.ajax({
            url : '{:url("device.area/index")}',
            type : "get",
            dataType : "json",
            success : function(res){
                if(res.code === 0){
                    return false;
                }
                var marker, markers = [];
                var infoWindow = new AMap.InfoWindow({
                    isCustom: false,
                    autoMove: true,
                    offset: new AMap.Pixel(0, -30),
                    size: new AMap.Size(560, 330),
                    content: ""
                });
                if(!res.data) return true;
                for(var i=0; i< res.data.length; i++){
                    var lnglat=[res.data[i].lng,res.data[i].lat];
                    marker = new AMap.Marker({
                        position: lnglat,
                        zIndex: 1000,
                        title: res.data[i].name,
                        map: map,
                        extData: {
                            id: i + 1
                        }
                    });
                    marker.id = res.data[i].id;
                    marker.lnglat = [res.data[i].lng,res.data[i].lat];
                    marker.on('click', function(e){
                        var htmls = get_marker_table(e.target.id);
                        infoWindow.setContent(htmls);
                        infoWindow.open(map, e.lnglat);
                        e.target.setAnimation('AMAP_ANIMATION_BOUNCE');
                        infoWindow.on('change', function() {
                            e.target.setAnimation('AMAP_ANIMATION_NONE');
                        });
                    });
                    markers.push(marker);
                }
                overlayGroups = new AMap.OverlayGroup(markers);
                map.add(overlayGroups);
            }
        });
    });
</script>